//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nature4U.NatureServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BodyParts", Namespace="http://schemas.datacontract.org/2004/07/Nature4U.TYPES")]
    [System.SerializableAttribute()]
    public partial class BodyParts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BodyParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BodyPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BodyParentID {
            get {
                return this.BodyParentIDField;
            }
            set {
                if ((this.BodyParentIDField.Equals(value) != true)) {
                    this.BodyParentIDField = value;
                    this.RaisePropertyChanged("BodyParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BodyPartID {
            get {
                return this.BodyPartIDField;
            }
            set {
                if ((this.BodyPartIDField.Equals(value) != true)) {
                    this.BodyPartIDField = value;
                    this.RaisePropertyChanged("BodyPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NatureServiceRef.INatureService")]
    public interface INatureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INatureService/GetBodyParts", ReplyAction="http://tempuri.org/INatureService/GetBodyPartsResponse")]
        System.Collections.Generic.List<Nature4U.NatureServiceRef.BodyParts> GetBodyParts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INatureService/GetBodyParts", ReplyAction="http://tempuri.org/INatureService/GetBodyPartsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Nature4U.NatureServiceRef.BodyParts>> GetBodyPartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INatureService/InsertBodyParts", ReplyAction="http://tempuri.org/INatureService/InsertBodyPartsResponse")]
        int InsertBodyParts(Nature4U.NatureServiceRef.BodyParts objParts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INatureService/InsertBodyParts", ReplyAction="http://tempuri.org/INatureService/InsertBodyPartsResponse")]
        System.Threading.Tasks.Task<int> InsertBodyPartsAsync(Nature4U.NatureServiceRef.BodyParts objParts);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INatureServiceChannel : Nature4U.NatureServiceRef.INatureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NatureServiceClient : System.ServiceModel.ClientBase<Nature4U.NatureServiceRef.INatureService>, Nature4U.NatureServiceRef.INatureService {
        
        public NatureServiceClient() {
        }
        
        public NatureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NatureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NatureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NatureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Nature4U.NatureServiceRef.BodyParts> GetBodyParts() {
            return base.Channel.GetBodyParts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Nature4U.NatureServiceRef.BodyParts>> GetBodyPartsAsync() {
            return base.Channel.GetBodyPartsAsync();
        }
        
        public int InsertBodyParts(Nature4U.NatureServiceRef.BodyParts objParts) {
            return base.Channel.InsertBodyParts(objParts);
        }
        
        public System.Threading.Tasks.Task<int> InsertBodyPartsAsync(Nature4U.NatureServiceRef.BodyParts objParts) {
            return base.Channel.InsertBodyPartsAsync(objParts);
        }
    }
}
